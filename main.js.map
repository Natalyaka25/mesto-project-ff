{"version":3,"file":"main.js","mappings":"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","sources":["webpack://praktikum/webpack/bootstrap","webpack://praktikum/./src/scripts/components/card.js","webpack://praktikum/./src/scripts/components/modal.js","webpack://praktikum/./src/scripts/index.js","webpack://praktikum/./src/scripts/cards.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// @todo: Темплейт карточки\r\n// const cardTemplatePlacesItemSelector = \".places__item\";\r\nconst cardTemplate = document.querySelector(\"#card-template\").content;\r\n\r\n// @todo: Функция создания карточки\r\nexport function createCard(element, { onDeleteCard, onLikeCard, onOpenView }) {\r\n  const card = cardTemplate.querySelector(\".places__item\").cloneNode(true);\r\n  const cardImage = card.querySelector(\".card__image\");\r\n  const cardTitle = card.querySelector(\".card__title\");\r\n  const deleteButton = card.querySelector(\".card__delete-button\");\r\n  const likeButton = card.querySelector(\".card__like-button\");\r\n\r\n  cardImage.src = element.link;\r\n  cardImage.alt = element.name;\r\n  cardTitle.textContent = element.name;\r\n\r\n  deleteButton.addEventListener(\"click\", () => {\r\n    onDeleteCard(card);\r\n  });\r\n\r\n  likeButton.addEventListener(\"click\", () => {\r\n    onLikeCard(likeButton);\r\n  });\r\n\r\n  cardImage.addEventListener(\"click\", () => {\r\n    onOpenView(element);\r\n  });\r\n\r\n  return card;\r\n}\r\n","const popupOpendClass = \"popup_is-opened\";\r\n\r\n// Универсальная функция открытия попапа\r\nexport function openModal(popupElement) {\r\n  // Открываем нужный попап\r\n\r\n  document.addEventListener(\"keydown\", handleEscape);\r\n  // popupElement.classList.add(\"popup_is-animated\");\r\n  // setTimeout(() => {\r\n  //   popupElement.classList.add(popupOpendClass);\r\n  // }, 10);\r\n\r\n  // void popupElement.offsetWidth; // Принудительный перерасчёт\r\n  popupElement.classList.add(popupOpendClass);\r\n  document.addEventListener(\"keydown\", handleEscape);\r\n}\r\n\r\n\r\n// Универсальная функция закрытия попапа\r\nexport function closeModal(popupElement) {\r\n  popupElement.classList.remove(popupOpendClass);\r\n  // Удаляем обработчики закрытия\r\n  document.removeEventListener(\"keydown\", handleEscape);\r\n}\r\n\r\n// Обработчик закрытия по ESC\r\nfunction handleEscape(evt) {\r\n  if (evt.key === \"Escape\") {\r\n    const openedPopup = document.querySelector(`.${popupOpendClass}`);\r\n    if (openedPopup) {\r\n      closeModal(openedPopup);\r\n    }\r\n  }\r\n}\r\n\r\n// Обработчик закрытия по клику на оверлей\r\nexport function handleOverlayClick(evt) {\r\n  if (evt.target === evt.currentTarget) {\r\n    closeModal(evt.currentTarget);\r\n  }\r\n}\r\n\r\nexport function handleButtonClose(popup) {\r\n  const closeButton = popup.querySelector(\".popup__close\");\r\n  closeButton.addEventListener(\"click\", () => {\r\n    closeModal(popup);\r\n  });\r\n  popup.addEventListener(\"click\", handleOverlayClick);\r\n  popup.classList.add(\"popup_is-animated\");\r\n}\r\n","import { initialCards } from \"./cards.js\";\r\nimport { createCard } from \"./components/card.js\";\r\nimport {\r\n  openModal,\r\n  closeModal,\r\n  handleButtonClose,\r\n} from \"./components/modal.js\";\r\n\r\n// @todo: DOM узлы\r\n\r\nconst contentList = document.querySelector(\".places__list\");\r\nconst openButtonCard = document.querySelector(\".profile__add-button\"); // Кнопка открытия поапа для добавления карточек\r\nconst openButtonProfile = document.querySelector(\".profile__edit-button\"); // Кнопка открытия поапа для редактирования поофиля\r\nconst popups = document.querySelectorAll(\".popup\"); // Все кнопки закрытия\r\n\r\n// DOM узлы профиля\r\nconst popupProfile = document.querySelector(\".popup_type_edit\"); //popup профиля\r\nconst formElementProfile = document.forms[\"edit-profile\"]; //форма для редактирования профиля\r\nconst nameInput = formElementProfile.querySelector(\".popup__input_type_name\"); // поле ввода имени\r\nconst jobInput = formElementProfile.querySelector(\".popup__input_type_description\"); // поле ввода занятия\r\nconst profileName = document.querySelector(\".profile__title\"); // имя профиля на странице\r\nconst profileJob = document.querySelector(\".profile__description\"); // занятие в профиле на странице\r\n\r\n//  DOM узлы карточек\r\nconst popupCardAdd = document.querySelector(\".popup_type_new-card\"); //popup карточки\r\nconst formElementCard = document.forms[\"new-place\"]; //форма для добавления карточки\r\nconst placeInput = formElementCard.querySelector(\r\n  \".popup__input_type_card-name\"\r\n); // поле ввода наименования\r\nconst linkInput = formElementCard.querySelector(\".popup__input_type_url\"); // поле ввода страницы\r\nconst imagePopup = document.querySelector(\".popup_type_image\"); //popup для открытия карточки\r\nconst imageView = imagePopup.querySelector(\".popup__image\"); //popup картинки\r\nconst captionView = imagePopup.querySelector(\".popup__caption\"); //popup наименования\r\n\r\n// @todo: Функция удаления карточки\r\nfunction handleCardDelete(card) {\r\n  card.remove();\r\n}\r\n\r\n// @todo: Функция лайка\r\nfunction handleCardLike(likeButton) {\r\n  likeButton.classList.toggle(\"card__like-button_is-active\");\r\n}\r\n\r\n// @todo: Функция открытия карточки popup\r\nfunction handleOpenView({ name, link }) {\r\n  imageView.src = link;\r\n  imageView.alt = name;\r\n  captionView.textContent = name;\r\n  openModal(imagePopup);\r\n}\r\n\r\nconst cardCallbacks = {\r\n  onDeleteCard: handleCardDelete,\r\n  onLikeCard: handleCardLike,\r\n  onOpenView: handleOpenView,\r\n};\r\n\r\n// функця добавления карточки\r\nfunction handleAddCardFormSubmit(evt) {\r\n  evt.preventDefault();\r\n\r\n  // Получаем данные из формы\r\n  const name = placeInput.value;\r\n  const link = linkInput.value;\r\n\r\n  // Создаем и добавляем карточку\r\n  const cardElement = createCard({ name, link }, cardCallbacks);\r\n  contentList.prepend(cardElement);\r\n\r\n  // Очищаем форму и закрываем попап\r\n  closeModal(popupCardAdd);\r\n}\r\n\r\nfunction handleFormProfileSubmit(evt) {\r\n  evt.preventDefault(); // Эта строчка отменяет стандартную отправку формы.\r\n  // Так мы можем определить свою логику отправки.\r\n  // О том, как это делать, расскажем позже.\r\n  // Получите значение полей jobInput и nameInput из свойства value\r\n  const nameValue = nameInput.value;\r\n  const jobValue = jobInput.value;\r\n  // Выберите элементы, куда должны быть вставлены значения полей\r\n  // Вставьте новые значения с помощью textContent\r\n  profileName.textContent = nameValue;\r\n  profileJob.textContent = jobValue;\r\n  closeModal(popupProfile);\r\n}\r\n\r\n// Назначаем обработчики открытия\r\nopenButtonProfile.addEventListener(\"click\", () => {\r\n  nameInput.value = profileName.textContent;\r\n  jobInput.value = profileJob.textContent;\r\n  openModal(popupProfile);\r\n});\r\n\r\nopenButtonCard.addEventListener(\"click\", () => {\r\n  formElementCard.reset();\r\n  openModal(popupCardAdd);\r\n});\r\n\r\n// Назначаем обработчики закрытия на все кнопки закрытия\r\npopups.forEach(handleButtonClose);\r\n\r\n// Назначаем обработчики открытия изменения профиля\r\nformElementProfile.addEventListener(\"submit\", handleFormProfileSubmit);\r\n\r\n// Назначаем обработчики добавления карточки\r\nformElementCard.addEventListener(\"submit\", (evt) => {\r\n  handleAddCardFormSubmit(evt);\r\n});\r\n\r\n// @todo: Вывести карточки на страницу\r\ninitialCards.forEach(function (element) {\r\n  const card = createCard(element, cardCallbacks);\r\n  contentList.append(card);\r\n});\r\n","export { initialCards }\r\nconst initialCards = [\r\n  {\r\n    name: \"Архыз\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/arkhyz.jpg\",\r\n  },\r\n  {\r\n    name: \"Челябинская область\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/chelyabinsk-oblast.jpg\",\r\n  },\r\n  {\r\n    name: \"Иваново\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/ivanovo.jpg\",\r\n  },\r\n  {\r\n    name: \"Камчатка\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kamchatka.jpg\",\r\n  },\r\n  {\r\n    name: \"Холмогорский район\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/kholmogorsky-rayon.jpg\",\r\n  },\r\n  {\r\n    name: \"Байкал\",\r\n    link: \"https://pictures.s3.yandex.net/frontend-developer/cards-compressed/baikal.jpg\",\r\n  },\r\n];"],"names":["cardTemplate","document","querySelector","content","createCard","element","_ref","onDeleteCard","onLikeCard","onOpenView","card","cloneNode","cardImage","cardTitle","deleteButton","likeButton","src","link","alt","name","textContent","addEventListener","popupOpendClass","openModal","popupElement","handleEscape","classList","add","closeModal","remove","removeEventListener","evt","key","openedPopup","concat","handleOverlayClick","target","currentTarget","contentList","openButtonCard","openButtonProfile","popups","querySelectorAll","popupProfile","formElementProfile","forms","nameInput","jobInput","profileName","profileJob","popupCardAdd","formElementCard","placeInput","linkInput","imagePopup","imageView","captionView","cardCallbacks","toggle","value","reset","forEach","popup","preventDefault","nameValue","jobValue","cardElement","prepend","handleAddCardFormSubmit","append"],"sourceRoot":""}